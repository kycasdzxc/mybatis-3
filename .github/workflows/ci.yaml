#
#    Copyright 2009-2021 the original author or authors.
#
#    Licensed under the Apache License, Version 2.0 (the "License");
#    you may not use this file except in compliance with the License.
#    You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS,
#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#    See the License for the specific language governing permissions and
#    limitations under the License.
#

name: Java CI

on: [push, pull_request]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]
        java: [11, 17, 18, 19, 20]
        distribution: ['zulu']
      fail-fast: false
      max-parallel: 4
    name: Test JDK ${{ matrix.java }}, ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3
      - name: Set JDK from jdk.java.net
        uses: oracle-actions/setup-java@v1
        with:
          website: jdk.java.net
          release: ${{ matrix.java }}
        if: ${{ matrix.java != '11' && matrix.java != '17' }}
      - name: Set up older JDK
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.java }}
          distribution: ${{ matrix.distribution }}
        if: ${{ matrix.java == '11' || matrix.java == '17' }}
      - name: Print JDK Version
        run: java -version
      - name: Cache local Maven m2
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-m2
      - name: Set argLine command line option
        if: ${{ matrix.java == '11' }}
        run: echo 'ARG_LINE=-D"argLine=--illegal-access=permit"' >> $GITHUB_ENV
      - name: Skip tests that require illegal reflective access
        if: ${{ matrix.os == 'ubuntu-latest' && matrix.java != '11' }}
        run: echo 'ARG_LINE=-D"excludedGroups=RequireIllegalAccess"' >> $GITHUB_ENV
      - name: Skip tests that require illegal reflective access
        if: ${{ matrix.os != 'ubuntu-latest' && matrix.java != '11' }}
        run: echo 'ARG_LINE=-D"excludedGroups=TestcontainersTests,RequireIllegalAccess"' >> $GITHUB_ENV
      - name: Set env command line option
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: echo 'ENV_GITHUB="-Denv.GITHUB"' >> $GITHUB_ENV
      - name: Test with Maven
        if: ${{ matrix.os != 'windows-latest' }}
        run: ./mvnw test -B -D"license.skip=true" -D"jacoco.skip=true" $ENV_GITHUB $ARG_LINE
      - name: Test with Maven
        if: ${{ matrix.os == 'windows-latest' && matrix.java == '11' }}
        run: ./mvnw test -B -D"license.skip=true" -D"jacoco.skip=true" -D"argLine=--illegal-access=permit"
      - name: Test with Maven
        if: ${{ matrix.os == 'windows-latest' && matrix.java != '11' }}
        run: ./mvnw test -B -D"license.skip=true" -D"jacoco.skip=true" -D"excludedGroups=TestcontainersTests,RequireIllegalAccess"
